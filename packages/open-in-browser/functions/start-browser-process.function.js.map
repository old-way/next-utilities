{"version":3,"sources":["functions/start-browser-process.function.ts"],"names":[],"mappings":";;AAAA,iDAAyC;AACzC,0EAA8D;AAC9D,2BAA4B;AAE5B,6BAAoC,OAAO,EAAE,GAAG;IAK5C,MAAM,kCAAkC,GACpC,OAAO,CAAC,QAAQ,KAAK,QAAQ;QAC7B,CAAC,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,gCAAU,CAAC,CAAC;IAE5D,IAAI,kCAAkC,EAAE;QACpC,IAAI;YAGA,wBAAQ,CAAC,iCAAiC,CAAC,CAAC;YAC5C,wBAAQ,CAAC,qCAAqC,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;gBACpE,GAAG,EAAE,SAAS;gBACd,KAAK,EAAE,QAAQ;aAClB,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC;SACf;QAAC,OAAO,GAAG,EAAE;SAEb;KACJ;IAMD,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,IAAI,OAAO,KAAK,MAAM,EAAE;QACrD,OAAO,GAAG,SAAS,CAAC;KACvB;IAID,IAAI;QACA,MAAM,OAAO,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;QACjC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAElB,OAAO,IAAI,CAAC;KACf;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,KAAK,CAAC;KAChB;AACL,CAAC;AA3CD,kDA2CC","file":"start-browser-process.function.js","sourcesContent":["import { execSync } from \"child_process\";\nimport { OSX_CHROME } from \"../constants/osx-chrome.constant\";\nimport opn = require(\"opn\");\n\nexport function startBrowserProcess(browser, url) {\n    // If we\"re on OS X, the user hasn't specifically\n    // requested a different browser, we can try opening\n    // Chrome with AppleScript. This lets us reuse an\n    // existing tab when possible instead of creating a new one.\n    const shouldTryOpenChromeWithAppleScript =\n        process.platform === \"darwin\" &&\n        (typeof browser !== \"string\" || browser === OSX_CHROME);\n\n    if (shouldTryOpenChromeWithAppleScript) {\n        try {\n            // Try our best to reuse existing tab\n            // on OS X Google Chrome with AppleScript\n            execSync(\"ps cax | grep \\\"Google Chrome\\\"\");\n            execSync(\"osascript openChrome.applescript \\\"\" + encodeURI(url) + \"\\\"\", {\n                cwd: __dirname,\n                stdio: \"ignore\",\n            });\n\n            return true;\n        } catch (err) {\n            // Ignore errors.\n        }\n    }\n\n    // Another special case: on OS X, check if BROWSER has been set to \"open\".\n    // In this case, instead of passing `open` to `opn` (which won't work),\n    // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n    // https://github.com/facebookincubator/create-react-app/pull/1690#issuecomment-283518768\n    if (process.platform === \"darwin\" && browser === \"open\") {\n        browser = undefined;\n    }\n\n    // Fallback to opn\n    // (It will always open new tab)\n    try {\n        const options = { app: browser };\n        opn(url, options);\n\n        return true;\n    } catch (err) {\n        return false;\n    }\n}\n"]}