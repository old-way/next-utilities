{"version":3,"sources":["functions/open-in-browser.function.ts"],"names":[],"mappings":";;AAAA,oEAAwD;AACxD,iFAAmE;AACnE,yEAA2D;AAC3D,qFAAuE;AAEvE,uBAA8B,GAAG;IAC7B,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,wCAAa,EAAE,CAAC;IAC1C,QAAQ,MAAM,EAAE;QACZ,KAAK,0BAAO,CAAC,IAAI;YAEb,OAAO,KAAK,CAAC;QACjB,KAAK,0BAAO,CAAC,MAAM;YACf,OAAO,gDAAiB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACzC,KAAK,0BAAO,CAAC,OAAO;YAChB,OAAO,oDAAmB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAC3C;YACI,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;KAC3C;AACL,CAAC;AAbD,sCAaC","file":"open-in-browser.function.js","sourcesContent":["import { actions } from \"../constants/actions.constant\";\nimport { executeNodeScript } from \"./execute-node-script.function\";\nimport { getBrowserEnv } from \"./get-browser-env.function\";\nimport { startBrowserProcess } from \"./start-browser-process.function\";\n\nexport function openInBrowser(url) {\n    const { action, value } = getBrowserEnv();\n    switch (action) {\n        case actions.NONE:\n            // Special case: BROWSER=\"none\" will prevent opening completely.\n            return false;\n        case actions.SCRIPT:\n            return executeNodeScript(value, url);\n        case actions.BROWSER:\n            return startBrowserProcess(value, url);\n        default:\n            throw new Error(\"Not implemented.\");\n    }\n}\n"]}